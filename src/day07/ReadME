函数
Go语言中支持函数、匿名函数和闭包，并且函数在Go语言中属于”一等公民“。
1、函数定义
Go语言中定义函数使用func关键字，具体格式如下：
    func 函数名(参数) (返回值) {
        函数体
    }
其中：
  ** 函数名：由字母、数字、下划线组成。但函数名的第一个字母不能是数字。在同一个包内，函数名也不能重名。（包的概念详见后文）
  ** 参数：参数由参数变量和参数变量的类型组成，多个参数之间使用 , 分隔。
  ** 返回值：返回值由返回值变量和其变量类型组成，也可以只写返回值的类型，多个返回值必须用 ()包裹，并用 ,分隔。
  ** 函数体：实现指定功能的代码块。

2、defer
defer把它后面的语句延迟到函数即将返回的时候再执行，defer多用于函数结束之前释放资源（文件句柄、数据库连接、socket连接）。
在Go语言的函数中，return语句在底层并不是原子操作，它分为给返回值赋值和RET指令两步。而defer语句执行的时机就在返回值赋值操作后，RET指令执行前。

3、函数类型与变量
定义函数类型：我们可以使用type关键字来定义一个函数类型，具体格式如下：
    type calculation func(int, int) int
上面语句定义了一个calculation类型，它是一种函数类型，这种函数接收两个int类型的参数并且返回一个int类型的返回值。例如：下面的add函数
    func add(x, y int) int {
	    return x + y
    }
add都能赋值给calculation类型的变量。
    var c calculation       // 声明函数类型变量c
    c = add                 // 为该变量赋值

4、高阶函数
高阶函数分为函数作为参数和函数作为返回值两部分：
函数作为参数
函数也能作为返回值

5、匿名函数和闭包
*** 匿名函数
函数当然还可以作为返回值，但是在Go语言中函数内部不能再像之前那样定义函数了，只能定义匿名函数。匿名函数就是没有函数名的函数，匿名函数的定义格式如下：
    func(参数)(返回值){ 函数体 }
匿名函数因为没有函数名，所以没办法像普通函数那样调用，所以匿名函数需要保存到某个变量或者作为立即执行函数。
匿名函数多用于实现回调函数和闭包。
*** 闭包
