day03基础知识
*今日概要
1、switch case语句，条件判断
2、for循环语句，循环
3、goto语法，不太建议使用
4、字符串格式化。“拼接”数据
5、运算符

一、switch语句
	//注意事项：数据类型一致的情况，正确：1>2、3+4，错误1>"3"、5+"6"
	//1、左花括号{必须与switch处于同一行
	//2、条件表达式不限制为常量或者整数
	//3、单个case中，可以出现多个结果选项
	//4、与C语言规则相反，Go语言不需要用break来明确退出一个case
	//5、只有在case中明确添加fallthrough关键字，才会继续执行紧跟的下一个case
二、for循环
    //1、死循环
    //2、布尔值条件
    //3、变量&条件&变量赋值
    //4、continue关键字：在for循环中，当循环遇到continue关键字时，会停止当前循环，开始下一次循环。
    //5、在for循环中时，循环中一旦遇到break，跳出循环。
    ***对for进行打标签，然后通过break和continue就可以实现多层循环的跳出和终止***
三、goto语句
    跳跃到指定的行，然后向下执行代码。
四、字符串格式化
    将数据格式化成为特定格式的字符串时，可以使用字符串格式化。
五、运算符
    参考地址：
    https://golang.org/ref/spec#Arithmetic_operators
    https://www.runoob.com/go/go-operators.html
    //1、算数运算符
    //2、关系运算符
    //3、逻辑运算符
    //4、位运算符
            ***位运算指的是二进制之间的运算***
            No.1******按位进行与运算（全为1才得1）
            r1 := 5 & 99
            5   -> 0000101
            99  -> 1100011
                   0000001   ->  1（result）
            No.2******按位进行或运算（只要有1就得1）
            r2 := 5 | 99
            5   -> 0000101
            99  -> 1100011
                   1100111   ->  103（result）
            No.3******按位进行异或运算（上下不同就得1）
            r3 := 5 ^ 99
            5   -> 0000101
            99  -> 1100011
                   1100110   ->  102（result）
            No.4******按位向左移动
            r4 := 5 << 2
            5       -> 101
            向左移动2位：10100  ->  20（result）
            No.5******按位向左移动
            r5 := 5 >> 1
            5       -> 101
            向右移动1位： 10  ->  2（result）
            No.6******比较清除（以前面值为基准，让前面值和后面值的二进制位
            进行比较，如果两个位置都是1，则将前面值的那个位置置为0）
            r6 := 5 &^ 99
            5   -> 0000101
            99  -> 1100011
                   0000100   ->  4（result）
    //5、赋值运算符
    //**********运算符的优先级***********//
    //**5级    * / % << >> & &^
    //**4级    + - | ^
    //**3级    == != < <= > >=
    //**2级    &&
    //**1级    ||
    //**当然，你可以通过括号来临时提升某个表达式的整体运算优先级。